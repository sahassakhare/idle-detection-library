name: Release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'docs/**'

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Build library
      run: npm run build
    
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Check if there are changes to release
        if npm run version -- --conventional-commits --yes --no-push; then
          # Push version changes
          git push --follow-tags
          
          # Publish to npm
          npm run publish -- --yes
          
          # Create GitHub release
          npx conventional-github-releaser -p angular
        else
          echo "No changes to release"
        fi

  publish-canary:
    runs-on: ubuntu-latest
    name: Publish Canary
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build library
      run: npm run build
    
    - name: Publish canary
      run: npm run publish:canary -- --yes
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}